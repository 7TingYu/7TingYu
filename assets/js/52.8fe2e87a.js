(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{648:function(v,_,t){"use strict";t.r(_);var a=t(23),r=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"网络七层模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#网络七层模型"}},[v._v("#")]),v._v(" 网络七层模型")]),v._v(" "),t("ul",[t("li",[v._v("应用层")]),v._v(" "),t("li",[v._v("表示层")]),v._v(" "),t("li",[v._v("会话层")]),v._v(" "),t("li",[v._v("传输层")]),v._v(" "),t("li",[v._v("网络层")]),v._v(" "),t("li",[v._v("数据链路")]),v._v(" "),t("li",[v._v("物理层")])]),v._v(" "),t("h2",{attrs:{id:"考试范围"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#考试范围"}},[v._v("#")]),v._v(" 考试范围")]),v._v(" "),t("ul",[t("li",[v._v("网络基础（了解）")]),v._v(" "),t("li",[v._v("TCP 与 UDP（掌握）")]),v._v(" "),t("li",[v._v("HTTP（精通）")])]),v._v(" "),t("h3",{attrs:{id:"端口范围"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#端口范围"}},[v._v("#")]),v._v(" 端口范围")]),v._v(" "),t("p",[v._v("0 ~ 65535")]),v._v(" "),t("h2",{attrs:{id:"tcp-三次握手和四次挥手"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tcp-三次握手和四次挥手"}},[v._v("#")]),v._v(" TCP 三次握手和四次挥手")]),v._v(" "),t("ul",[t("li",[v._v("SYN")]),v._v(" "),t("li",[v._v("SYN-ACK")]),v._v(" "),t("li",[v._v("ACK")])]),v._v(" "),t("h2",{attrs:{id:"resful"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#resful"}},[v._v("#")]),v._v(" Resful")]),v._v(" "),t("h2",{attrs:{id:"跨域方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#跨域方法"}},[v._v("#")]),v._v(" 跨域方法")]),v._v(" "),t("ul",[t("li",[v._v("CORS")]),v._v(" "),t("li",[v._v("Node 正向代理")]),v._v(" "),t("li",[v._v("Nginx 反向代理")]),v._v(" "),t("li",[v._v("JSONP")]),v._v(" "),t("li",[v._v("Websocket")]),v._v(" "),t("li",[v._v("window.postMessage")]),v._v(" "),t("li",[v._v("document.domain + Iframe")]),v._v(" "),t("li",[v._v("window.location.hash + Iframe")]),v._v(" "),t("li",[v._v("window.name + Iframe")])]),v._v(" "),t("h2",{attrs:{id:"强缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[v._v("#")]),v._v(" 强缓存")]),v._v(" "),t("p",[v._v("直接从本地副本比对读取，"),t("strong",[v._v("不去请求服务器")]),v._v("，返回的状态码是 200。")]),v._v(" "),t("p",[t("strong",[v._v("expires（HTTP1.0）")])]),v._v(" "),t("p",[v._v("expires 是 HTTP1.0 中定义的缓存字段。它是一个"),t("strong",[v._v("时间戳")]),v._v("（准确点应该叫格林尼治时间），当客户端再次请求该资源的时候，会把客户端时间与该时间戳进行对比，如果大于该时间戳则已过期，否则直接使用该缓存资源。")]),v._v(" "),t("p",[v._v("但是，有个大问题，发送请求时是使用的客户端时间去对比。一是客户端和服务端时间可能快慢不一致，另一方面是客户端的时间是可以自行修改的（比如浏览器是跟随系统时间的，修改系统时间会影响到），所以不一定满足预期。")]),v._v(" "),t("p",[t("strong",[v._v("cache-control（HTTP1.1）")])]),v._v(" "),t("p",[v._v("由于上面说的可能存在的问题，HTTP1.1 新增了 cache-control 字段来解决该问题，所以当 cache-control 和 expires 都存在时，cache-control 优先级更高。")]),v._v(" "),t("p",[v._v("该字段是一个时间长度，单位秒，表示该资源过了多少秒后失效。当客户端请求资源的时候，发现该资源还在有效时间内则使用该缓存，"),t("strong",[v._v("它不依赖客户端时间")]),v._v("。cache-control 主要有 max-age 和 s-maxage、public 和 private、no-cache 和 no-store 等值。")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("Cache-directive")]),v._v(" "),t("th",[v._v("说明")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("public")]),v._v(" "),t("td",[v._v("所有内容都将被缓存 （客户端和代理服务器都可以缓存）")])]),v._v(" "),t("tr",[t("td",[v._v("private")]),v._v(" "),t("td",[v._v("内容只缓存到私有缓存中（客户端可以缓存）")])]),v._v(" "),t("tr",[t("td",[v._v("no-cache")]),v._v(" "),t("td",[v._v("需要使用协商缓存来验证缓存数据")])]),v._v(" "),t("tr",[t("td",[v._v("no-store")]),v._v(" "),t("td",[v._v("所有内容都不会缓存")])]),v._v(" "),t("tr",[t("td",[v._v("must-revalidation/proxy-revalidation")]),v._v(" "),t("td",[v._v("如果缓存的内容失效，请求必须发送到服务器/代理以进行重新验证")])]),v._v(" "),t("tr",[t("td",[v._v("max-age=xxx (xxx is numeric)")]),v._v(" "),t("td",[v._v("缓存的内容将在 xxx 秒后失效, 这个选项只在HTTP 1.1可用, 并如果和Last-Modified一起使用时, 优先级较高")])])])]),v._v(" "),t("h2",{attrs:{id:"协商缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[v._v("#")]),v._v(" 协商缓存")]),v._v(" "),t("p",[t("strong",[v._v("last-modified & if-Modified-Since")])]),v._v(" "),t("p",[v._v("这是一组通过协商修改时间为基础的策略。")]),v._v(" "),t("p",[t("strong",[v._v("etag & if-None-Match")])]),v._v(" "),t("p",[v._v("通过内容判断，一般的做法是将返回内容进行摘要（Hash），然后通过对比摘要来判断内容是否更新。")]),v._v(" "),t("h2",{attrs:{id:"ssl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ssl"}},[v._v("#")]),v._v(" SSL")]),v._v(" "),t("p",[v._v("SSL证书由浏览器中“受信任的根证书颁发机构”在验证服务器身份后颁发,具有网站身份验证和加密传输双重功能")])])}),[],!1,null,null,null);_.default=r.exports}}]);