(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{657:function(s,n,e){"use strict";e.r(n);var t=e(23),a=Object(t.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"准备初始代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#准备初始代码"}},[s._v("#")]),s._v(" 准备初始代码")]),s._v(" "),e("ul",[e("li",[s._v("github")])]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone -b start-point https://github.com/tuture-dev/koa-quickstart.git\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ul",[e("li",[s._v("gitee")])]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone -b start-point https://gitee.com/tuture/koa-quickstart.git\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("进入项目，安装依赖：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" koa-quickstart "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"最简单的-koa-服务器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#最简单的-koa-服务器"}},[s._v("#")]),s._v(" 最简单的 Koa 服务器")]),s._v(" "),e("p",[s._v("创建 "),e("code",[s._v("src/server.ts")]),s._v(" ，编写第一个 Koa 服务器，代码如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// src/server.ts\nimport Koa from 'koa';\nimport cors from '@koa/cors';\nimport bodyParser from 'koa-bodyparser';\n\n// 初始化 Koa 应用实例\nconst app = new Koa();\n\n// 注册中间件\napp.use(cors());\napp.use(bodyParser());\n\n// 响应用户请求\napp.use((ctx) => {\n  ctx.body = 'Hello Koa';\n});\n\n// 运行服务器\napp.listen(3000);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[s._v("整个流程与一个基本的 Express 服务器几乎完全一致：")]),s._v(" "),e("ol",[e("li",[s._v("初始化应用实例 "),e("code",[s._v("app")])]),s._v(" "),e("li",[s._v("注册相关的中间件（跨域 "),e("code",[s._v("cors")]),s._v(" 和请求体解析中间件 "),e("code",[s._v("bodyParser")]),s._v("）")]),s._v(" "),e("li",[s._v("添加请求处理函数，响应用户请求")]),s._v(" "),e("li",[s._v("运行服务器")])]),s._v(" "),e("p",[s._v("定睛一看，第 3 步中的请求处理函数（Request Handler）好像不太一样。在 Express 框架中，一个请求处理函数一般是这样的：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("function handler(req, res) {\n  res.send('Hello Express');\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("两个参数分别对应请求对象（Request）和响应对象（Response），但是在 Koa 中，请求处理函数却只有一个参数 "),e("code",[s._v("ctx")]),s._v(" （Context，上下文），然后只需向上下文对象写入相关的属性即可（例如这里就是写入到返回数据 "),e("code",[s._v("body")]),s._v(" 中）：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("function handler(ctx) {\n  ctx.body = 'Hello Koa';\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("我的天，Koa 这是故意偷工减料的吗？先不用急，我们马上在下一节讲解中间件时就会了解到 Koa 这样设计的独到之处。")]),s._v(" "),e("h3",{attrs:{id:"运行服务器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#运行服务器"}},[s._v("#")]),s._v(" 运行服务器")]),s._v(" "),e("p",[s._v("我们通过 "),e("code",[s._v("npm start")]),s._v(" 就能开启服务器了。可以通过 Curl （或者 Postman 等）来测试我们的 API：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ curl localhost:3000\nHello Koa\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("blockquote",[e("p",[e("strong",[s._v("提示")])]),s._v(" "),e("p",[s._v("我们的脚手架中配置好了 "),e("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fremy%2Fnodemon",title:"https://github.com/remy/nodemon",target:"_blank",rel:"noopener noreferrer"}},[s._v("Nodemon"),e("OutboundLink")],1),s._v("，因此接下来无需关闭服务器，修改代码保存后会自动加载最新的代码并运行。")])]),s._v(" "),e("h2",{attrs:{id:"第一个-koa-中间件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一个-koa-中间件"}},[s._v("#")]),s._v(" 第一个 Koa 中间件")]),s._v(" "),e("p",[s._v("严格意义上来说，Koa 只是一个中间件框架，正如它的介绍所说：")]),s._v(" "),e("blockquote",[e("p",[s._v("Expressive middleware for node.js using ES2017 async functions.（通过 ES2017 async 函数编写富有表达力的 Node.js 中间件）")])]),s._v(" "),e("p",[s._v("下面这个表格更能说明 Koa 和 Express 的鲜明对比：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/372626e44bf74b14bbed73809ef07952~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),s._v(" "),e("p",[s._v("可以看到，Koa 实际上对标的是 "),e("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fsenchalabs%2Fconnect",title:"https://github.com/senchalabs/connect",target:"_blank",rel:"noopener noreferrer"}},[s._v("Connect"),e("OutboundLink")],1),s._v("（Express 底层的中间件层），而不包含 Express 所拥有的其他功能，例如路由、模板引擎、发送文件等。接下来，我们就来学习 Koa 最重要的知识点："),e("strong",[s._v("中间件")]),s._v("。")]),s._v(" "),e("h3",{attrs:{id:"大名鼎鼎的-洋葱模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#大名鼎鼎的-洋葱模型"}},[s._v("#")]),s._v(" 大名鼎鼎的“洋葱模型”")]),s._v(" "),e("p",[s._v("你也许从来没有用过 Koa 框架，但很有可能听说过“洋葱模型”，而 Koa 正是洋葱模型的代表框架之一。下面这个图你也许很熟悉了：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5c2c64fcebe14905b1babb00eb0dc24c~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),s._v(" "),e("p",[s._v("不过以个人观点，这个图实在是太像“洋葱”了，反而不太好理解。接下来我们将以更清晰直观的方式来感受 Koa 中间件的设计之美。首先我们来看一下 Express 的中间件是什么样的：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d5998cf4d8dc4c89b3ae10aa96dfeae5~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),s._v(" "),e("p",[s._v("请求（Request）直接依次贯穿各个中间件，最后通过请求处理函数返回响应（Response），非常简单。然后我们来看看 Koa 的中间件是什么样的：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4c383539c6114fdb86499a9f91e34fe0~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),s._v(" "),e("p",[s._v("可以看到，Koa 中间件不像 Express 中间件那样在请求通过了之后就完成了自己的使命；相反，中间件的执行清晰地分为"),e("strong",[s._v("两个阶段")]),s._v("。我们马上来看下 Koa 中间件具体是什么样的。")]),s._v(" "),e("h3",{attrs:{id:"koa-中间件的定义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#koa-中间件的定义"}},[s._v("#")]),s._v(" Koa 中间件的定义")]),s._v(" "),e("p",[s._v("Koa 的中间件是这样一个函数：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("async function middleware(ctx, next) {\n  // 第一阶段\n  await next();\n  // 第二阶段\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("第一个参数就是 Koa Context，也就是上图中贯穿所有中间件和请求处理函数的绿色箭头所传递的内容，里面"),e("strong",[s._v("封装了请求体和响应体")]),s._v("（实际上还有其他属性，但这里暂时不讲），分别可以通过 "),e("code",[s._v("ctx.request")]),s._v(" 和 "),e("code",[s._v("ctx.response")]),s._v(" 来获取，以下是一些常用的属性：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("ctx.url    // 相当于 ctx.request.url\nctx.body   // 相当于 ctx.response.body\nctx.status // 相当于 ctx.response.status\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("blockquote",[e("p",[e("strong",[s._v("提示")])]),s._v(" "),e("p",[s._v("关于所有请求和响应上面的属性及其别称，请参考 "),e("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fkoajs%2Fkoa%2Fblob%2Fmaster%2Fdocs%2Fapi%2Fcontext.md",title:"https://github.com/koajs/koa/blob/master/docs/api/context.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("Context API 文档"),e("OutboundLink")],1),s._v("。")])]),s._v(" "),e("p",[s._v("中间件的第二个参数便是 "),e("code",[s._v("next")]),s._v(" 函数，这个熟悉 Express 的同学一定知道它是干什么的：用来把控制权转交给下一个中间件。但是它跟 Express 的 "),e("code",[s._v("next")]),s._v(" 函数本质的区别在于，"),e("strong",[s._v("Koa 的 "),e("strong",[e("strong",[e("code",[s._v("next")])])]),s._v(" 函数返回的是一个 Promise")]),s._v("，在这个 Promise 进入完成状态（Fulfilled）后，就会去执行中间件中第二阶段的代码。")]),s._v(" "),e("p",[s._v("那么我们不禁要问：这样把中间件的执行拆分为两个阶段，到底有什么好处吗？我们来通过一个非常经典的例子来感受一下：日志记录中间件（包括响应时间的计算）。")]),s._v(" "),e("h3",{attrs:{id:"实战-日志记录中间件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实战-日志记录中间件"}},[s._v("#")]),s._v(" 实战：日志记录中间件")]),s._v(" "),e("p",[s._v("让我们来实现一个简单的日志记录中间件 "),e("code",[s._v("logger")]),s._v(" ，用于记录每次请求的方法、URL、状态码和响应时间。创建 "),e("code",[s._v("src/logger.ts")]),s._v(" ，代码如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// src/logger.ts\nimport { Context } from 'koa';\n\nexport function logger() {\n  return async (ctx: Context, next: () => Promise<void>) => {\n    const start = Date.now();\n    await next();\n    const ms = Date.now() - start;\n    console.log(`${ctx.method} ${ctx.url} ${ctx.status} - ${ms}ms`);\n  };\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[s._v("严格意义上讲，这里的 "),e("code",[s._v("logger")]),s._v(" 是一个"),e("strong",[s._v("中间件工厂函数")]),s._v("（Factory），调用这个工厂函数后返回的结果才是真正的 Koa 中间件。之所以写成一个工厂函数，是因为我们可以通过给工厂函数传参的方式来更好地控制中间件的行为（当然这里的 "),e("code",[s._v("logger")]),s._v(" 比较简单，就没有任何参数）。")]),s._v(" "),e("p",[s._v("在这个中间件的第一阶段，我们通过 "),e("code",[s._v("Date.now()")]),s._v(" 先获取请求进入的时间，然后通过 "),e("code",[s._v("await next()")]),s._v(" 让出执行权，等待下游中间件运行结束后，再在第二阶段通过计算 "),e("code",[s._v("Date.now()")]),s._v(" 的差值来得出处理请求所用的时间。")]),s._v(" "),e("p",[s._v("思考一下，如果用 Express 来实现这个功能，中间件应该怎么写，会有 Koa 这么简单优雅吗？")]),s._v(" "),e("blockquote",[e("p",[e("strong",[s._v("提示")])]),s._v(" "),e("p",[s._v("这里通过两个 "),e("code",[s._v("Date.now()")]),s._v(" 之间的差值来计算运行时间其实是不精确的，为了获取更准确的时间，建议使用 "),e("code",[s._v("process.hrtime()")]),s._v(" 。")])]),s._v(" "),e("p",[s._v("然后我们在 "),e("code",[s._v("src/server.ts")]),s._v(" 中把刚才的 "),e("code",[s._v("logger")]),s._v(" 中间件通过 "),e("code",[s._v("app.use")]),s._v(" 注册进去，代码如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// src/server.ts\n// ...\n\nimport { logger } from './logger';\n\n// 初始化 Koa 应用实例\nconst app = new Koa();\n\n// 注册中间件\napp.use(logger());\napp.use(cors());\napp.use(bodyParser());\n\n// ...\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[s._v("这时候再访问我们的服务器（通过 Curl 或者其他请求工具），应该可以看到输出日志：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/da0b6530625e40ea9c9ce93a8ca2798c~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),s._v(" "),e("p",[s._v("关于 Koa 框架本身的内容基本讲完了，但是对于一个比较完整的 Web 服务器来说，我们还需要更多的“武器装备”才能应对日常的业务逻辑。在接下来的部分，我们将通过社区的优秀组件来解决两个关键问题：路由和数据库，并演示如何结合 Koa 框架进行使用。")]),s._v(" "),e("h2",{attrs:{id:"实现路由配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现路由配置"}},[s._v("#")]),s._v(" 实现路由配置")]),s._v(" "),e("p",[s._v("由于 Koa 只是一个中间件框架，所以路由的实现需要独立的 npm 包。首先安装 "),e("code",[s._v("@koa/router")]),s._v(" 及其 TypeScript 类型定义：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ npm install @koa/router\n$ npm install @types/koa__router -D\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("blockquote",[e("p",[e("strong",[s._v("注意")])]),s._v(" "),e("p",[s._v("有些教程使用 "),e("code",[s._v("koa-router")]),s._v(" ，但由于 "),e("code",[s._v("koa-router")]),s._v(" 目前处于几乎无人维护的状态，所以我们这里使用维护更积极的 Fork 版本 "),e("code",[s._v("@koa/router")]),s._v("。")])]),s._v(" "),e("h3",{attrs:{id:"路由规划"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#路由规划"}},[s._v("#")]),s._v(" 路由规划")]),s._v(" "),e("p",[s._v("在这篇教程中，我们将实现以下路由：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("GET /users")]),s._v(" ：查询所有的用户")]),s._v(" "),e("li",[e("code",[s._v("GET /users/:id")]),s._v(" ：查询单个用户")]),s._v(" "),e("li",[e("code",[s._v("PUT /users/:id")]),s._v(" ：更新单个用户")]),s._v(" "),e("li",[e("code",[s._v("DELETE /users/:id")]),s._v(" ：删除单个用户")]),s._v(" "),e("li",[e("code",[s._v("POST /users/login")]),s._v(" ：登录（获取 JWT Token）")]),s._v(" "),e("li",[e("code",[s._v("POST /users/register")]),s._v(" ：注册用户")])]),s._v(" "),e("h3",{attrs:{id:"实现-controller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现-controller"}},[s._v("#")]),s._v(" 实现 Controller")]),s._v(" "),e("p",[s._v("在 "),e("code",[s._v("src")]),s._v(" 中创建 "),e("code",[s._v("controllers")]),s._v(" 目录，用于存放控制器有关的代码。首先是 "),e("code",[s._v("AuthController")]),s._v(" ，创建 "),e("code",[s._v("src/controllers/auth.ts")]),s._v(" ，代码如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// src/controllers/auth.ts\nimport { Context } from 'koa';\n\nexport default class AuthController {\n  public static async login(ctx: Context) {\n    ctx.body = 'Login controller';\n  }\n\n  public static async register(ctx: Context) {\n    ctx.body = 'Register controller';\n  }\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[s._v("然后创建 "),e("code",[s._v("src/controllers/user.ts")]),s._v("，代码如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// src/controllers/user.ts\nimport { Context } from 'koa';\n\nexport default class UserController {\n  public static async listUsers(ctx: Context) {\n    ctx.body = 'ListUsers controller';\n  }\n\n  public static async showUserDetail(ctx: Context) {\n    ctx.body = `ShowUserDetail controller with ID = ${ctx.params.id}`;\n  }\n\n  public static async updateUser(ctx: Context) {\n    ctx.body = `UpdateUser controller with ID = ${ctx.params.id}`;\n  }\n\n  public static async deleteUser(ctx: Context) {\n    ctx.body = `DeleteUser controller with ID = ${ctx.params.id}`;\n  }\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("p",[s._v("注意到在后面三个 Controller 中，我们通过 "),e("code",[s._v("ctx.params")]),s._v(" 获取到路由参数 "),e("code",[s._v("id")]),s._v(" 。")]),s._v(" "),e("h3",{attrs:{id:"实现路由"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现路由"}},[s._v("#")]),s._v(" 实现路由")]),s._v(" "),e("p",[s._v("然后我们创建 "),e("code",[s._v("src/routes.ts")]),s._v("，用于把控制器挂载到对应的路由上面：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// src/routes.ts\nimport Router from '@koa/router';\n\nimport AuthController from './controllers/auth';\nimport UserController from './controllers/user';\n\nconst router = new Router();\n\n// auth 相关的路由\nrouter.post('/auth/login', AuthController.login);\nrouter.post('/auth/register', AuthController.register);\n\n// users 相关的路由\nrouter.get('/users', UserController.listUsers);\nrouter.get('/users/:id', UserController.showUserDetail);\nrouter.put('/users/:id', UserController.updateUser);\nrouter.delete('/users/:id', UserController.deleteUser);\n\nexport default router;\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[s._v("可以看到 "),e("code",[s._v("@koa/router")]),s._v(" 的使用方式基本上与 Express Router 保持一致。")]),s._v(" "),e("h3",{attrs:{id:"注册路由"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注册路由"}},[s._v("#")]),s._v(" 注册路由")]),s._v(" "),e("p",[s._v("最后，我们需要将 "),e("code",[s._v("router")]),s._v(" 注册为中间件。打开 "),e("code",[s._v("src/server.ts")]),s._v("，修改代码如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// src/server.ts\n// ...\n\nimport router from './routes';\nimport { logger } from './logger';\n\n// 初始化 Koa 应用实例\nconst app = new Koa();\n\n// 注册中间件\napp.use(logger());\napp.use(cors());\napp.use(bodyParser());\n\n// 响应用户请求\napp.use(router.routes()).use(router.allowedMethods());\n\n// 运行服务器\napp.listen(3000);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[s._v("可以看到，这里我们调用 "),e("code",[s._v("router")]),s._v(" 对象的 "),e("code",[s._v("routes")]),s._v(" 方法获取到对应的 Koa 中间件，还调用了 "),e("code",[s._v("allowedMethods")]),s._v(" 方法注册了 HTTP 方法检测的中间件，这样当用户通过不正确的 HTTP 方法访问 API 时，就会自动返回 405 Method Not Allowed 状态码。")]),s._v(" "),e("p",[s._v("我们通过 Curl 来测试路由（也可以自行使用 Postman）：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ curl localhost:3000/hello\nNot Found\n$ curl localhost:3000/auth/register\nMethod Not Allowed\n$ curl -X POST localhost:3000/auth/register\nRegister controller\n$ curl -X POST localhost:3000/auth/login\nLogin controller\n$ curl localhost:3000/users\nListUsers controller\n$ curl localhost:3000/users/123\nShowUserDetail controller with ID = 123\n$ curl -X PUT localhost:3000/users/123\nUpdateUser controller with ID = 123\n$ curl -X DELETE localhost:3000/users/123\nDeleteUser controller with ID = 123\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("p",[s._v("同时可以看到服务器的输出日志如下：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8c55eb5dd1654d02b19f9460e23020f7~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),s._v(" "),e("p",[s._v("路由已经接通，接下来就让我们来接入真实的数据吧！")]),s._v(" "),e("h2",{attrs:{id:"接入-mysql-数据库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#接入-mysql-数据库"}},[s._v("#")]),s._v(" 接入 MySQL 数据库")]),s._v(" "),e("p",[s._v("从这一步开始，我们将正式接入数据库。Koa 本身是一个中间件框架，理论上可以接入任何类型的数据库，这里我们选择流行的关系型数据库 MySQL。并且，由于我们使用了 TypeScript 开发，因此这里使用为 TS 量身打造的 "),e("a",{attrs:{href:"https://link.juejin.cn?target=http%3A%2F%2Fwww.ruanyifeng.com%2Fblog%2F2019%2F02%2Form-tutorial.html",title:"http://www.ruanyifeng.com/blog/2019/02/orm-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("ORM"),e("OutboundLink")],1),s._v(" 库 TypeORM。")]),s._v(" "),e("h3",{attrs:{id:"数据库的准备工作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据库的准备工作"}},[s._v("#")]),s._v(" 数据库的准备工作")]),s._v(" "),e("p",[s._v("首先，请安装和配置好 MySQL 数据库，可以通过两种方式：")]),s._v(" "),e("ul",[e("li",[s._v("官网下载安装包，这里是"),e("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fdev.mysql.com%2Fdownloads%2Fmysql%2F",title:"https://dev.mysql.com/downloads/mysql/",target:"_blank",rel:"noopener noreferrer"}},[s._v("下载地址"),e("OutboundLink")],1)]),s._v(" "),e("li",[s._v("使用 MySQL Docker 镜像")])]),s._v(" "),e("p",[s._v("在确保 MySQL 实例运行之后，我们打开终端，通过命令行连接数据库：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ mysql -u root -p\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("输入预先设置好的根帐户密码之后，就进入了 MySQL 的交互式执行客户端，然后运行以下命令：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("--- 创建数据库\nCREATE DATABASE koa;\n\n--- 创建用户并授予权限\nCREATE USER 'user'@'localhost' IDENTIFIED BY 'pass';\nGRANT ALL PRIVILEGES ON koa.* TO 'user'@'localhost';\n\n--- 处理 MySQL 8.0 版本的认证协议问题\nALTER USER 'user'@'localhost' IDENTIFIED WITH mysql_native_password BY 'pass';\nflush privileges;\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("h3",{attrs:{id:"typeorm-的配置和连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typeorm-的配置和连接"}},[s._v("#")]),s._v(" TypeORM 的配置和连接")]),s._v(" "),e("p",[s._v("首先安装相关的 npm 包，分别是 MySQL 驱动、TypeORM 及 "),e("code",[s._v("reflect-metadata")]),s._v("（反射 API 库，用于 TypeORM 推断模型的元数据）：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ npm install mysql typeorm reflect-metadata\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("然后在项目根目录创建 "),e("code",[s._v("ormconfig.json")]),s._v(" ，TypeORM 会读取这个数据库配置进行连接，代码如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('// ormconfig.json\n{\n  "type": "mysql",\n  "host": "localhost",\n  "port": 3306,\n  "username": "user",\n  "password": "pass",\n  "database": "koa",\n  "synchronize": true,\n  "entities": ["src/entity/*.ts"],\n  "cli": {\n    "entitiesDir": "src/entity"\n  }\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[s._v("这里有一些需要解释的字段：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("database")]),s._v(" 就是我们刚刚创建的 "),e("code",[s._v("koa")]),s._v(" 数据库")]),s._v(" "),e("li",[e("code",[s._v("synchronize")]),s._v(" 设为 "),e("code",[s._v("true")]),s._v(" 能够让我们每次修改模型定义后都能自动同步到数据库*（如果你接触过其他的 ORM 库，其实就是自动数据迁移）*")]),s._v(" "),e("li",[e("code",[s._v("entities")]),s._v(" 字段定义了模型文件的路径，我们马上就来创建")])]),s._v(" "),e("p",[s._v("接着修改 "),e("code",[s._v("src/server.ts")]),s._v("，在其中连接数据库，代码如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// src/server.ts\nimport Koa from 'koa';\nimport cors from '@koa/cors';\nimport bodyParser from 'koa-bodyparser';\nimport { createConnection } from 'typeorm';\nimport 'reflect-metadata';\n\nimport router from './routes';\nimport { logger } from './logger';\n\ncreateConnection()\n  .then(() => {\n    // 初始化 Koa 应用实例\n    const app = new Koa();\n\n    // 注册中间件\n    app.use(logger());\n    app.use(cors());\n    app.use(bodyParser());\n\n    // 响应用户请求\n    app.use(router.routes()).use(router.allowedMethods());\n\n    // 运行服务器\n    app.listen(3000);\n  })\n  .catch((err: string) => console.log('TypeORM connection error:', err));\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br")])]),e("h3",{attrs:{id:"创建数据模型定义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建数据模型定义"}},[s._v("#")]),s._v(" 创建数据模型定义")]),s._v(" "),e("p",[s._v("在 "),e("code",[s._v("src")]),s._v(" 目录下创建 "),e("code",[s._v("entity")]),s._v(" 目录，用于存放数据模型定义文件。在其中创建 "),e("code",[s._v("user.ts")]),s._v(" ，代表用户模型，代码如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// src/entity/user.ts\nimport { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @Column({ select: false })\n  password: string;\n\n  @Column()\n  email: string;\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[s._v("可以看到，用户模型有四个字段，其含义很容易理解。而 TypeORM 则是通过"),e("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fwww.tslang.cn%2Fdocs%2Fhandbook%2Fdecorators.html",title:"https://www.tslang.cn/docs/handbook/decorators.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("装饰器"),e("OutboundLink")],1),s._v("这种优雅的方式来将我们的 "),e("code",[s._v("User")]),s._v(" 类映射到数据库中的表。这里我们使用了三个装饰器：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("Entity")]),s._v(" 用于装饰整个类，使其变成一个数据库模型")]),s._v(" "),e("li",[e("code",[s._v("Column")]),s._v(" 用于装饰类的某个属性，使其对应于数据库表中的一列，可提供一系列选项参数，例如我们给 "),e("code",[s._v("password")]),s._v(" 设置了 "),e("code",[s._v("select: false")]),s._v(" ，使得这个字段在查询时默认不被选中")]),s._v(" "),e("li",[e("code",[s._v("PrimaryGeneratedColumn")]),s._v(" 则是装饰主列，它的值将自动生成")])]),s._v(" "),e("blockquote",[e("p",[e("strong",[s._v("提示")])]),s._v(" "),e("p",[s._v("关于 TypeORM 所有的装饰器定义及其详细使用，请参考其"),e("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Ftypeorm%2Ftypeorm%2Fblob%2Fmaster%2Fdocs%2Fzh_CN%2Fdecorator-reference.md",title:"https://github.com/typeorm/typeorm/blob/master/docs/zh_CN/decorator-reference.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("装饰器文档"),e("OutboundLink")],1),s._v("。")])]),s._v(" "),e("h3",{attrs:{id:"在-controller-中操作数据库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在-controller-中操作数据库"}},[s._v("#")]),s._v(" 在 Controller 中操作数据库")]),s._v(" "),e("p",[s._v("然后就可以在 Controller 中进行数据的增删改查操作了。首先我们打开 "),e("code",[s._v("src/controllers/user.ts")]),s._v(" ，实现所有 Controller 的逻辑，代码如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// src/controllers/user.ts\nimport { Context } from 'koa';\nimport { getManager } from 'typeorm';\n\nimport { User } from '../entity/user';\n\nexport default class UserController {\n  public static async listUsers(ctx: Context) {\n    const userRepository = getManager().getRepository(User);\n    const users = await userRepository.find();\n\n    ctx.status = 200;\n    ctx.body = users;\n  }\n\n  public static async showUserDetail(ctx: Context) {\n    const userRepository = getManager().getRepository(User);\n    const user = await userRepository.findOne(+ctx.params.id);\n\n    if (user) {\n      ctx.status = 200;\n      ctx.body = user;\n    } else {\n      ctx.status = 404;\n    }\n  }\n\n  public static async updateUser(ctx: Context) {\n    const userRepository = getManager().getRepository(User);\n    await userRepository.update(+ctx.params.id, ctx.request.body);\n    const updatedUser = await userRepository.findOne(+ctx.params.id);\n\n    if (updatedUser) {\n      ctx.status = 200;\n      ctx.body = updatedUser;\n    } else {\n      ctx.status = 404;\n    }\n  }\n\n  public static async deleteUser(ctx: Context) {\n    const userRepository = getManager().getRepository(User);\n    await userRepository.delete(+ctx.params.id);\n\n    ctx.status = 204;\n  }\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br")])]),e("p",[s._v("TypeORM 中操作数据模型主要是通过 "),e("code",[s._v("Repository")]),s._v(" 实现的，在 Controller 中，可以通过 "),e("code",[s._v("getManager().getRepository(Model)")]),s._v(" 来获取到，之后 "),e("code",[s._v("Repository")]),s._v(" 的查询 API 就与其他的库很类似了。")]),s._v(" "),e("blockquote",[e("p",[e("strong",[s._v("提示")])]),s._v(" "),e("p",[s._v("关于 Repository 所有的查询 API，请参考"),e("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Ftypeorm%2Ftypeorm%2Fblob%2Fmaster%2Fdocs%2Fzh_CN%2Frepository-api.md",title:"https://github.com/typeorm/typeorm/blob/master/docs/zh_CN/repository-api.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("这里的文档"),e("OutboundLink")],1),s._v("。")])]),s._v(" "),e("p",[s._v("细心的你应该还发现我们通过 "),e("code",[s._v("ctx.request.body")]),s._v(" 获取到了请求体的数据，这是我们在第一步就配置好的 "),e("code",[s._v("bodyParser")]),s._v(" 中间件在 Context 对象中添加的。")]),s._v(" "),e("p",[s._v("然后我们修改 "),e("code",[s._v("AuthController")]),s._v(" ，实现具体的注册逻辑。由于密码不能明文保存在数据库中，需要使用非对称算法进行加密，这里我们使用曾经获得过密码加密大赛冠军的 "),e("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fwww.argon2.com%2F",title:"https://www.argon2.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Argon2"),e("OutboundLink")],1),s._v(" 算法。安装对应的 npm 包：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("npm install argon2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("然后实现具体的 "),e("code",[s._v("register")]),s._v(" Controller，修改 "),e("code",[s._v("src/controllers/auth.ts")]),s._v("，代码如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// src/controllers/auth.ts\nimport { Context } from 'koa';\nimport * as argon2 from 'argon2';\nimport { getManager } from 'typeorm';\n\nimport { User } from '../entity/user';\n\nexport default class AuthController {\n  // ...\n\n  public static async register(ctx: Context) {\n    const userRepository = getManager().getRepository(User);\n\n    const newUser = new User();\n    newUser.name = ctx.request.body.name;\n    newUser.email = ctx.request.body.email;\n    newUser.password = await argon2.hash(ctx.request.body.password);\n\n    // 保存到数据库\n    const user = await userRepository.save(newUser);\n\n    ctx.status = 201;\n    ctx.body = user;\n  }\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br")])]),e("p",[s._v("确保服务器在运行之后，我们就可以开始测试一波了。首先是注册用户（这里我用 Postman 演示，直观一些）：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a4b3bb213e5545549ce1cdbd91be4ccc~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),s._v(" "),e("p",[s._v("你可以继续注册几个用户，然后继续访问 "),e("code",[s._v("/users")]),s._v(" 相关的路由，应该可以成功地获取、修改和删除相应的数据了！")]),s._v(" "),e("h2",{attrs:{id:"实现-jwt-鉴权"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现-jwt-鉴权"}},[s._v("#")]),s._v(" 实现 JWT 鉴权")]),s._v(" "),e("p",[s._v("JSON Web Token（JWT）是一种流行的 RESTful API 鉴权方案。这里我们将手把手带你学会如何在 Koa 框架中使用 JWT 鉴权，但是不会过多讲解其原理（可参考"),e("a",{attrs:{href:"https://link.juejin.cn?target=http%3A%2F%2Fwww.ruanyifeng.com%2Fblog%2F2018%2F07%2Fjson_web_token-tutorial.html",title:"http://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("这篇文章"),e("OutboundLink")],1),s._v("进行学习）。")]),s._v(" "),e("p",[s._v("首先安装相关的 npm 包：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("npm install koa-jwt jsonwebtoken\nnpm install @types/jsonwebtoken -D\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("创建 "),e("code",[s._v("src/constants.ts")]),s._v(" ，用于存放 JWT Secret 常量，代码如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// src/constants.ts\nexport const JWT_SECRET = 'secret';\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("在实际开发中，请替换成一个足够复杂的字符串，并且最好通过环境变量的方式注入。")]),s._v(" "),e("h3",{attrs:{id:"重新规划路由"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重新规划路由"}},[s._v("#")]),s._v(" 重新规划路由")]),s._v(" "),e("p",[s._v("有些路由我们希望只有已登录的用户才有权查看（"),e("em",[s._v("受保护的路由")]),s._v("），而另一些路由则是所有请求都可以访问（"),e("em",[s._v("不受保护的路由")]),s._v("）。在 Koa 的洋葱模型中，我们可以这样实现：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0b985f6ddd88475d88af6413b7dc71ef~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),s._v(" "),e("p",[s._v("所有请求都可以直接访问未受保护的路由，但是受保护的路由就放在 JWT 中间件的后面（或者从洋葱模型的角度看是“里面”），这样对于没有携带 JWT Token 的请求就直接返回，而不会继续传递下去。")]),s._v(" "),e("p",[s._v("想法明确之后，打开 "),e("code",[s._v("src/routes.ts")]),s._v(" 路由文件，修改代码如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// src/routes.ts\nimport Router from '@koa/router';\n\nimport AuthController from './controllers/auth';\nimport UserController from './controllers/user';\n\nconst unprotectedRouter = new Router();\n\n// auth 相关的路由\nunprotectedRouter.post('/auth/login', AuthController.login);\nunprotectedRouter.post('/auth/register', AuthController.register);\n\nconst protectedRouter = new Router();\n\n// users 相关的路由\nprotectedRouter.get('/users', UserController.listUsers);\nprotectedRouter.get('/users/:id', UserController.showUserDetail);\nprotectedRouter.put('/users/:id', UserController.updateUser);\nprotectedRouter.delete('/users/:id', UserController.deleteUser);\n\nexport { protectedRouter, unprotectedRouter };\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br")])]),e("p",[s._v("上面我们分别实现了 "),e("code",[s._v("protectedRouter")]),s._v(" 和 "),e("code",[s._v("unprotectedRouter")]),s._v(" ，分别对应于需要 JWT 中间件保护的路由和不需要保护的路由。")]),s._v(" "),e("h3",{attrs:{id:"注册-jwt-中间件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注册-jwt-中间件"}},[s._v("#")]),s._v(" 注册 JWT 中间件")]),s._v(" "),e("p",[s._v("接着便是注册 JWT 中间件，并分别在其前后注册不需要保护的路由 "),e("code",[s._v("unprotectedRouter")]),s._v(" 和需要保护的路由 "),e("code",[s._v("protectedRouter")]),s._v("。修改服务器文件 "),e("code",[s._v("src/server.ts")]),s._v(" ，代码如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// src/server.ts\n// ...\nimport jwt from 'koa-jwt';\nimport 'reflect-metadata';\n\nimport { protectedRouter, unprotectedRouter } from './routes';\nimport { logger } from './logger';\nimport { JWT_SECRET } from './constants';\n\ncreateConnection()\n  .then(() => {\n    // ...\n\n    // 无需 JWT Token 即可访问\n    app.use(unprotectedRouter.routes()).use(unprotectedRouter.allowedMethods());\n\n    // 注册 JWT 中间件\n    app.use(jwt({ secret: JWT_SECRET }).unless({ method: 'GET' }));\n\n    // 需要 JWT Token 才可访问\n    app.use(protectedRouter.routes()).use(protectedRouter.allowedMethods());\n\n    // ...\n  })\n  // ...\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br")])]),e("p",[s._v("对应刚才“洋葱模型”的设计图，是不是感觉很直观？")]),s._v(" "),e("blockquote",[e("p",[e("strong",[s._v("提示")])]),s._v(" "),e("p",[s._v("在 JWT 中间件注册完毕后，如果用户请求携带了有效的 Token，后面的 "),e("code",[s._v("protectedRouter")]),s._v(" 就可以通过 "),e("code",[s._v("ctx.state.user")]),s._v(" 获取到 Token 的内容（更精确的说法是 Payload，负载，一般是用户的关键信息，例如 ID）了；反之，如果 Token 缺失或无效，那么 JWT 中间件会直接自动返回 401 错误。关于 koa-jwt 的更多使用细节，请参考其"),e("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fkoajs%2Fjwt",title:"https://github.com/koajs/jwt",target:"_blank",rel:"noopener noreferrer"}},[s._v("文档"),e("OutboundLink")],1),s._v("。")])]),s._v(" "),e("h3",{attrs:{id:"在-login-中签发-jwt-token"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在-login-中签发-jwt-token"}},[s._v("#")]),s._v(" 在 Login 中签发 JWT Token")]),s._v(" "),e("p",[s._v("我们需要提供一个 API 端口让用户可以获取到 JWT Token，最合适的当然是登录接口 "),e("code",[s._v("/auth/login")]),s._v("。打开 "),e("code",[s._v("src/controllers/auth.ts")]),s._v(" ，在 "),e("code",[s._v("login")]),s._v(" 控制器中实现签发 JWT Token 的逻辑，代码如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// src/controllers/auth.ts\n// ...\nimport jwt from 'jsonwebtoken';\n\n// ...\nimport { JWT_SECRET } from '../constants';\n\nexport default class AuthController {\n  public static async login(ctx: Context) {\n    const userRepository = getManager().getRepository(User);\n\n    const user = await userRepository\n      .createQueryBuilder()\n      .where({ name: ctx.request.body.name })\n      .addSelect('User.password')\n      .getOne();\n\n    if (!user) {\n      ctx.status = 401;\n      ctx.body = { message: '用户名不存在' };\n    } else if (await argon2.verify(user.password, ctx.request.body.password)) {\n      ctx.status = 200;\n      ctx.body = { token: jwt.sign({ id: user.id }, JWT_SECRET) };\n    } else {\n      ctx.status = 401;\n      ctx.body = { message: '密码错误' };\n    }\n  }\n\n  // ...\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br")])]),e("p",[s._v("在 "),e("code",[s._v("login")]),s._v(" 中，我们首先根据用户名（请求体中的 "),e("code",[s._v("name")]),s._v(" 字段）查询对应的用户，如果该用户不存在，则直接返回 401；存在的话再通过 "),e("code",[s._v("argon2.verify")]),s._v(" 来验证请求体中的明文密码 "),e("code",[s._v("password")]),s._v(" 是否和数据库中存储的加密密码是否一致，如果一致则通过 "),e("code",[s._v("jwt.sign")]),s._v(" 签发 Token，如果不一致则还是返回 401。")]),s._v(" "),e("p",[s._v("这里的 Token 负载就是标识用户 ID 的对象 "),e("code",[s._v("{ id: user.id }")]),s._v(" ，这样后面鉴权成功后就可以通过 "),e("code",[s._v("ctx.user.id")]),s._v(" 来获取用户 ID。")]),s._v(" "),e("h3",{attrs:{id:"在-user-控制器中添加访问控制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在-user-控制器中添加访问控制"}},[s._v("#")]),s._v(" 在 User 控制器中添加访问控制")]),s._v(" "),e("p",[s._v("Token 的中间件和签发都搞定之后，最后一步就是在合适的地方校验用户的 Token，确认其是否有足够的权限。最典型的场景便是，在更新或删除用户时，我们要"),e("strong",[s._v("确保是用户本人在操作")]),s._v("。打开 "),e("code",[s._v("src/controllers/user.ts")]),s._v(" ，代码如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// src/controllers/user.ts\n// ...\n\nexport default class UserController {\n  // ...\n\n  public static async updateUser(ctx: Context) {\n    const userId = +ctx.params.id;\n\n    if (userId !== +ctx.state.user.id) {\n      ctx.status = 403;\n      ctx.body = { message: '无权进行此操作' };\n      return;\n    }\n\n    const userRepository = getManager().getRepository(User);\n    await userRepository.update(userId, ctx.request.body);\n    const updatedUser = await userRepository.findOne(userId);\n\n    // ...\n  }\n\n  public static async deleteUser(ctx: Context) {\n    const userId = +ctx.params.id;\n\n    if (userId !== +ctx.state.user.id) {\n      ctx.status = 403;\n      ctx.body = { message: '无权进行此操作' };\n      return;\n    }\n\n    const userRepository = getManager().getRepository(User);\n    await userRepository.delete(userId);\n\n    ctx.status = 204;\n  }\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br")])]),e("p",[s._v("两个 Controller 的鉴权逻辑基本相同，我们通过比较 "),e("code",[s._v("ctx.params.id")]),s._v(" 和 "),e("code",[s._v("ctx.state.user.id")]),s._v(" 是否相同，如果不相同则返回 403 Forbidden 错误，相同则继续执行相应的数据库操作。")]),s._v(" "),e("p",[s._v("代码写完之后，我们用刚才注册的一个用户信息去访问登录 API：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/67ac6f6341234418ad8745ab15f65070~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),s._v(" "),e("p",[s._v("成功地获取到了 JWT Token！然后我们复制获取到的 Token，在接下来测试受保护的路由时，我们需要添加一个 "),e("code",[s._v("Authorization")]),s._v(" 头部，值为 "),e("code",[s._v("Bearer <JWT_TOKEN>")]),s._v(" ，如下图所示：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d6e15a4fe5bd4672b16f1a18857dc259~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),s._v(" "),e("p",[s._v("然后就可以测试受保护的路由了！这里由于篇幅限制就省略了。")]),s._v(" "),e("h2",{attrs:{id:"错误处理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#错误处理"}},[s._v("#")]),s._v(" 错误处理")]),s._v(" "),e("p",[s._v("最后，我们来简单地聊一下 Koa 中的错误处理。由于 Koa 采用了 async 函数和 Promise 作为异步编程的方案，所以错误处理自然也很简单了——直接用 JavaScript 自带的 try-catch 语法就可以轻松搞定。")]),s._v(" "),e("h3",{attrs:{id:"实现自定义错误-异常"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现自定义错误-异常"}},[s._v("#")]),s._v(" 实现自定义错误（异常）")]),s._v(" "),e("p",[s._v("首先，让我们来实现一些自定义的错误（或者异常，本文不作区分）类。创建 "),e("code",[s._v("src/exceptions.ts")]),s._v(" ，代码如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// src/exceptions.ts\nexport class BaseException extends Error {\n  // 状态码\n  status: number;\n  // 提示信息\n  message: string;\n}\n\nexport class NotFoundException extends BaseException {\n  status = 404;\n\n  constructor(msg?: string) {\n    super();\n    this.message = msg || '无此内容';\n  }\n}\n\nexport class UnauthorizedException extends BaseException {\n  status = 401;\n\n  constructor(msg?: string) {\n    super();\n    this.message = msg || '尚未登录';\n  }\n}\n\nexport class ForbiddenException extends BaseException {\n  status = 403;\n\n  constructor(msg?: string) {\n    super();\n    this.message = msg || '权限不足';\n  }\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br")])]),e("p",[s._v("这里的错误类型参考了 "),e("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fdocs.nestjs.com%2Fexception-filters",title:"https://docs.nestjs.com/exception-filters",target:"_blank",rel:"noopener noreferrer"}},[s._v("Nest.js"),e("OutboundLink")],1),s._v(" 的设计。出于学习目的，这里作了简化，并且只实现了我们需要用到的错误。")]),s._v(" "),e("h3",{attrs:{id:"在-controller-中使用自定义错误"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在-controller-中使用自定义错误"}},[s._v("#")]),s._v(" 在 Controller 中使用自定义错误")]),s._v(" "),e("p",[s._v("接着我们便可以在 Controller 中使用刚才的自定义错误了。打开 "),e("code",[s._v("src/controllers/auth.ts")]),s._v("，修改代码如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// src/controllers/auth.ts\n// ...\nimport { UnauthorizedException } from '../exceptions';\n\nexport default class AuthController {\n  public static async login(ctx: Context) {\n    // ...\n\n    if (!user) {\n      throw new UnauthorizedException('用户名不存在');\n    } else if (await argon2.verify(user.password, ctx.request.body.password)) {\n      ctx.status = 200;\n      ctx.body = { token: jwt.sign({ id: user.id }, JWT_SECRET) };\n    } else {\n      throw new UnauthorizedException('密码错误');\n    }\n  }\n\n  // ...\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("p",[s._v("可以看到，我们将直接手动设置状态码和响应体的代码改成了简单的错误抛出，代码清晰了很多。")]),s._v(" "),e("blockquote",[e("p",[e("strong",[s._v("提示")])]),s._v(" "),e("p",[s._v("Koa 的 Context 对象提供了一个便捷方法 "),e("code",[s._v("throw")]),s._v(" ，同样可以抛出异常，例如 "),e("code",[s._v("ctx.throw(400, 'Bad request')")]),s._v("。")])]),s._v(" "),e("p",[s._v("同样地，修改 "),e("code",[s._v("UserController")]),s._v(" 相关的逻辑。修改 "),e("code",[s._v("src/controllers/user.ts")]),s._v("，代码如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// src/controllers/user.ts\n// ...\nimport { NotFoundException, ForbiddenException } from '../exceptions';\n\nexport default class UserController {\n  // ...\n\n  public static async showUserDetail(ctx: Context) {\n    const userRepository = getManager().getRepository(User);\n    const user = await userRepository.findOne(+ctx.params.id);\n\n    if (user) {\n      ctx.status = 200;\n      ctx.body = user;\n    } else {\n      throw new NotFoundException();\n    }\n  }\n\n  public static async updateUser(ctx: Context) {\n    const userId = +ctx.params.id;\n\n    if (userId !== +ctx.state.user.id) {\n      throw new ForbiddenException();\n    }\n\n    // ...\n  }\n // ...\n  public static async deleteUser(ctx: Context) {\n    const userId = +ctx.params.id;\n\n    if (userId !== +ctx.state.user.id) {\n      throw new ForbiddenException();\n    }\n\n    // ...\n  }\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br")])]),e("h3",{attrs:{id:"添加错误处理中间件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#添加错误处理中间件"}},[s._v("#")]),s._v(" 添加错误处理中间件")]),s._v(" "),e("p",[s._v("最后，我们需要添加错误处理中间件来捕获在 Controller 中抛出的错误。打开 "),e("code",[s._v("src/server.ts")]),s._v(" ，实现错误处理中间件，代码如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// src/server.ts\n// ...\n\ncreateConnection()\n  .then(() => {\n    // ...\n\n    // 注册中间件\n    app.use(logger());\n    app.use(cors());\n    app.use(bodyParser());\n\n    app.use(async (ctx, next) => {\n      try {\n        await next();\n      } catch (err) {\n        // 只返回 JSON 格式的响应\n        ctx.status = err.status || 500;\n        ctx.body = { message: err.message };\n      }\n    });\n\n    // ...\n  })\n  // ...\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br")])]),e("p",[s._v("可以看到，在这个错误处理中间件中，我们把返回的响应数据转换成 JSON 格式（而不是之前的 Plain Text），这样看上去更统一一些。")])])}),[],!1,null,null,null);n.default=a.exports}}]);